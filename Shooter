

package frc.robot.subsystems;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.StatusFrameEnhanced;
import com.ctre.phoenix.motorcontrol.TalonFXFeedbackDevice;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonFX;

import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.Constants;

public class Shooter extends SubsystemBase {
  WPI_TalonFX m_flyWheelMotor = new WPI_TalonFX(Constants.portFWheel);
  
  public Shooter() {
    m_flyWheelMotor.setStatusFramePeriod(StatusFrameEnhanced.Status_2_Feedback0, 20);
    m_flyWheelMotor.setInverted(Constants.kInvertType);
    m_flyWheelMotor.setSensorPhase(false);
    m_flyWheelMotor.setNeutralMode(Constants.kBrakeDurNeutral);
    m_flyWheelMotor.configFactoryDefault();
    m_flyWheelMotor.configSelectedFeedbackSensor(TalonFXFeedbackDevice.IntegratedSensor, 1, 0);
    m_flyWheelMotor.configNeutralDeadband(0.001,0);
    m_flyWheelMotor.configNominalOutputForward(0,0);
    m_flyWheelMotor.configNominalOutputReverse(0,0);
    m_flyWheelMotor.configPeakOutputForward(1, 0);
    m_flyWheelMotor.configPeakOutputReverse(-1,0);

    //compensate speed loss
    m_flyWheelMotor.configVoltageCompSaturation(10); 
    m_flyWheelMotor.enableVoltageCompensation(true);
    
  }
  public void shootHigh(){
    //slot0 kP,kF control
    m_flyWheelMotor.selectProfileSlot(0, 0);
    m_flyWheelMotor.config_kP(0, Constants.kP_FWheelH);
    m_flyWheelMotor.config_kF(0,Constants.kF_FWheelH);

    m_flyWheelMotor.set(ControlMode.Velocity,Constants.kSpeed_FWheelH);
  }
  public void shootLow(){
    //slot1 kP,kF control
    m_flyWheelMotor.selectProfileSlot(1, 0);
    m_flyWheelMotor.config_kP(1, Constants.kP_FWheelL);
    m_flyWheelMotor.config_kF(1, Constants.kF_FWheelL);
    
    m_flyWheelMotor.set(ControlMode.Velocity,Constants.kSpeed_FWheelL);
  } 

 
}
